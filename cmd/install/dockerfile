FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu16.04


# root
RUN apt update --yes
RUN apt install --yes --no-install-recommends vim
RUN apt install --yes --no-install-recommends git
RUN apt install --yes --no-install-recommends ssh
RUN apt install --yes --no-install-recommends sudo
RUN apt install --yes --no-install-recommends wget
RUN apt install --yes --no-install-recommends cmake
RUN apt install --yes --no-install-recommends software-properties-common

ENV __TMP__=/etc/ssh/ssh_config
RUN cat $__TMP__ | grep -v ServerAliveInterval | tee ${__TMP__}_
RUN mv ${__TMP__}_ $__TMP__
RUN echo ServerAliveInterval 60 | tee -a $__TMP__

RUN echo '<PASSWORD/>\n<PASSWORD/>' | passwd
RUN echo '<PASSWORD/>\n<PASSWORD/>' | adduser ddd
RUN echo "ddd ALL=(ALL:ALL) ALL" >> /etc/sudoers


# bash
RUN wget https://ftp.gnu.org/gnu/bash/bash-4.4.tar.gz
RUN tar --extract --verbose --file bash-4.4.tar.gz

RUN cd bash-4.4 && ./configure && make && make install
RUN rm -r bash-4.4*


# cuda
RUN apt install --yes --no-install-recommends libnvinfer6=6.0.1-1+cuda10.1
RUN apt install --yes --no-install-recommends libnvinfer-dev=6.0.1-1+cuda10.1
RUN apt install --yes --no-install-recommends \
    libnvinfer-plugin6=6.0.1-1+cuda10.1


# python
RUN apt install --yes --no-install-recommends python3-dev
RUN apt install --yes --no-install-recommends python3-pip

RUN ln --symbolic $( which python3 ) /usr/bin/python
RUN ln --symbolic $( which pip3 ) /usr/bin/pip

RUN apt autoremove --yes


# user
ENV __HOME__=/home/ddd

USER ddd
WORKDIR $__HOME__

ENV PATH=$__HOME__/.local/bin:$PATH


# python
RUN python -m pip install --upgrade pip 
RUN python -m pip install --upgrade setuptools
RUN python -m pip install --upgrade pandas
RUN python -m pip install --upgrade pylint
RUN python -m pip install --upgrade jupyter
RUN python -m pip install --upgrade matplotlib
RUN python -m pip install --upgrade tensorflow
RUN python -m pip install --upgrade pycodestyle
RUN python -m pip install --upgrade pyinstaller
RUN python -m pip install --upgrade scikit-learn

# node
ENV __VER__=12.17.0
ENV __NAME__=node-v$__VER__-linux-x64.tar.xz
RUN wget https://nodejs.org/dist/v$__VER__/$__NAME__
RUN tar --extract --verbose --file $__NAME__
RUN rm $__NAME__
RUN mv ${__NAME__%.tar.xz} node

ENV PATH=$__HOME__/node/bin:$PATH
RUN npm install --global npm
RUN npm install --global @ionic/cli


# ddd
RUN echo "\
export LC_ALL=C.UTF-8\n\
export PATH=/usr/local/cuda/bin:$HOME/node/bin:$HOME/.local/bin:$PATH\n\
export LD_LIBRARY_PATH=/usr/local/cuda/compat:\$LD_LIBRARY_PATH\n\
LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:\$LD_LIBRARY_PATH\n\
export PYTHONPATH=$HOME/DDD/ddd/tools/python:\$PYTHONPATH\n\
. $HOME/DDD/ddd/cmd.sh profile" >> $__HOME__/.bashrc

ENV LC_ALL=C.UTF-8
ENV PYTHONPATH=$__HOME__/DDD/ddd/tools/python:$PYTHONPATH

RUN mkdir $__HOME__/.ssh
RUN echo '<KEY/>' > $__HOME__/.ssh/authorized_keys

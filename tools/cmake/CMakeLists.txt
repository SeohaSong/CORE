cmake_minimum_required(VERSION 3.5)
add_compile_options(-std=c++14 -fPIC -g -O3)
if(DEBUG_OPTION)
    add_compile_options(-D ${DEBUG_OPTION})
endif()

set(root_path ${CMAKE_CURRENT_LIST_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${root_path}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${root_path}/lib)

include_directories(${root_path}/include)
set(libs)
file(READ ${root_path}/dependency-lock.txt libs_)
string(REPLACE "\n" ";" libs_ "${libs_}")
foreach(lib_ ${libs_})
    set(path_ ${root_path}/../${lib_})
    include_directories(${path_}/include)
    set(lib ${path_}/lib/*.so)
    if (NOT ${lib} IN_LIST libs)
        file(GLOB_RECURSE libs ${libs} ${lib})
        file(GLOB_RECURSE libs ${libs} ${path_}/lib/*.a)
    endif()
endforeach()

set(main_file "src/main.cpp")
file(GLOB_RECURSE cpps ${root_path}/src/*.cpp)
if(EXISTS ${main_file})
    set(target exe)
    add_executable(${target} ${cpps})
else()
    get_filename_component(target ${root_path} NAME)
    add_library(${target} SHARED ${cpps})
endif()
target_link_libraries(${target} ${libs})
if(EXISTS ${main_file})
    target_link_libraries(${target} pthread)
    install (TARGETS ${target} DESTINATION .)
else()
    install (TARGETS ${target} LIBRARY DESTINATION .)
endif()

FROM ubuntu:20.04

ENV dockerfile_ver=20210104

RUN apt update --yes
RUN apt upgrade --yes

RUN apt install --yes --no-install-recommends vim
RUN apt install --yes --no-install-recommends git
RUN apt install --yes --no-install-recommends wget
RUN apt install --yes --no-install-recommends curl
RUN apt install --yes --no-install-recommends unzip

RUN apt install --yes --no-install-recommends sudo
RUN echo '<PASSWORD/>\n<PASSWORD/>' | passwd
RUN echo '<PASSWORD/>\n<PASSWORD/>' | adduser ddd
RUN echo "ddd ALL=(ALL:ALL) ALL" >> /etc/sudoers

RUN apt install --yes --no-install-recommends ssh
ENV ssh_config_file=/etc/ssh/ssh_config
RUN cat $ssh_config_file | \
    grep -v ServerAliveInterval | \
    tee ${ssh_config_file}_ > /dev/null
RUN mv ${ssh_config_file}_ $ssh_config_file
RUN echo ServerAliveInterval 60 | tee -a $ssh_config_file > /dev/null

RUN apt install --yes --no-install-recommends g++
RUN apt install --yes --no-install-recommends make
RUN DEBIAN_FRONTEND=noninteractive \
    apt install --yes --no-install-recommends cmake

RUN apt install --yes --no-install-recommends rustc

RUN apt install --yes --no-instal-recommends gccgo-go

RUN apt install --yes --no-install-recommends default-jdk

# swift 

RUN apt install --yes --no-install-recommends python3-dev
RUN apt install --yes --no-install-recommends python3-pip
RUN ln --symbolic $( which python3 ) /usr/bin/python
RUN ln --symbolic $( which pip3 ) /usr/bin/pip

RUN curl -sL https://deb.nodesource.com/setup_14.x | bash
RUN apt install --yes --no-install-recommends nodejs

RUN apt autoremove --yes

RUN mkdir /home/ddd/.ssh
RUN chown ddd:ddd /home/ddd/.ssh
COPY id_rsa /home/ddd/.ssh/id_rsa
RUN chown ddd:ddd /home/ddd/.ssh/id_rsa
RUN chmod 600 /home/ddd/.ssh/id_rsa
COPY id_rsa.pub /home/ddd/.ssh/id_rsa.pub
RUN chown ddd:ddd /home/ddd/.ssh/id_rsa.pub
RUN chmod 644 /home/ddd/.ssh/id_rsa.pub
COPY id_rsa.pub /home/ddd/.ssh/authorized_keys
RUN chown ddd:ddd /home/ddd/.ssh/authorized_keys
RUN chmod 644 /home/ddd/.ssh/authorized_keys

USER ddd
WORKDIR /home/ddd
RUN echo 'export LC_ALL=C.UTF-8' >> /home/ddd/.bashrc
ENV PATH=/home/ddd/.local/bin:$PATH
RUN echo 'export PATH=$HOME/.local/bin${PATH:+":$PATH"}' >> /home/ddd/.bashrc

# swift 

RUN echo '\
export PYTHONPATH=$HOME/DDD/ddd/src/python${PYTHONPATH:+":PYTHONPATH"}\
' >> /home/ddd/.bashrc
RUN python -m pip install --upgrade pip
RUN python -m pip install --upgrade pyinstaller
RUN python -m pip install --upgrade pycodestyle
RUN python -m pip install --upgrade pylint
RUN python -m pip install --upgrade pandas
RUN python -m pip install --upgrade jupyter

ENV gradle_ver=6.6.1
RUN wget https://services.gradle.org/distributions/gradle-$gradle_ver-bin.zip
RUN unzip gradle-$gradle_ver-bin.zip && rm gradle-$gradle_ver-bin.zip
RUN mv gradle-$gradle_ver /home/ddd/.local/lib
RUN ln -s /home/ddd/.local/lib/gradle-$gradle_ver/bin/gradle \
          /home/ddd/.local/bin/gradle
RUN gradle --version

RUN echo '. /home/ddd/DDD/ddd/cmd.sh profile' >> /home/ddd/.bashrc
